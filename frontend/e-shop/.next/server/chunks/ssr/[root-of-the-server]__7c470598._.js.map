{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 70, "column": 0}, "map": {"version":3,"sources":["file:///Users/sonyzaman/Desktop/giTHb/e-commerce/frontend/e-shop/components/products/productCard.tsx"],"sourcesContent":["// components/productCard.tsx\n\"use client\";\n\ninterface ProductCardProps {\n  id: number;\n  title: string;\n  description: string;\n  price: number;\n  productType: string;\n  vendor: { name: string };\n  category: { name: string };\n  imageUrl?: string;\n}\n\nexport default function ProductCard({\n  id,\n  title,\n  description,\n  price,\n  productType,\n  vendor,\n  category,\n  imageUrl,\n}: ProductCardProps) {\n  return (\n    <div className=\"border rounded-lg overflow-hidden shadow-lg hover:shadow-xl transition\">\n      <img\n        src={imageUrl || \"/images/picture.jpg\"}  // Fallback image if no image URL is provided\n        alt={title}\n        className=\"w-full h-48 object-cover\"\n      />\n      <div className=\"p-4\">\n        <h2 className=\"text-xl font-semibold mb-2\">{title}</h2>\n        <p className=\"text-gray-500 text-sm mb-4\">{description}</p>\n        <div className=\"flex justify-between items-center\">\n          <p className=\"font-bold text-xl text-blue-600\">${price}</p>\n          <button className=\"px-4 py-2 bg-blue-500 text-white text-sm rounded-full hover:bg-blue-600 transition\">\n            Add to Cart\n          </button>\n        </div>\n        <p className=\"text-xs text-gray-400 mt-2\">{productType}</p>\n        {/* <p className=\"text-xs text-gray-400\">{vendor.name}</p>\n        <p className=\"text-xs text-gray-400\">{category.name}</p> */}\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":"AAAA,6BAA6B;;;;;;AAC7B;;AAae,SAAS,YAAY,EAClC,EAAE,EACF,KAAK,EACL,WAAW,EACX,KAAK,EACL,WAAW,EACX,MAAM,EACN,QAAQ,EACR,QAAQ,EACS;IACjB,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBACC,KAAK,YAAY;gBACjB,KAAK;gBACL,WAAU;;;;;;0BAEZ,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAG,WAAU;kCAA8B;;;;;;kCAC5C,8OAAC;wBAAE,WAAU;kCAA8B;;;;;;kCAC3C,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;gCAAE,WAAU;;oCAAkC;oCAAE;;;;;;;0CACjD,8OAAC;gCAAO,WAAU;0CAAqF;;;;;;;;;;;;kCAIzG,8OAAC;wBAAE,WAAU;kCAA8B;;;;;;;;;;;;;;;;;;AAMnD","debugId":null}},
    {"offset": {"line": 163, "column": 0}, "map": {"version":3,"sources":["file:///Users/sonyzaman/Desktop/giTHb/e-commerce/frontend/e-shop/components/products/productGrid.tsx"],"sourcesContent":["// components/ProductGrid.tsx\n\"use client\";\n\nimport ProductCard from \"./productCard\";\n\ninterface ProductGridProps {\n  products: any[];\n}\n\nexport default function ProductGrid({ products }: ProductGridProps) {\n  return (\n    <div>\n      <div className=\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-6\">\n        {products.slice(0, 20).map((product) => (\n          <ProductCard key={product.id} {...product} />\n        ))}\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":"AAAA,6BAA6B;;;;;;AAG7B;AAFA;;;AAQe,SAAS,YAAY,EAAE,QAAQ,EAAoB;IAChE,qBACE,8OAAC;kBACC,cAAA,8OAAC;YAAI,WAAU;sBACZ,SAAS,KAAK,CAAC,GAAG,IAAI,GAAG,CAAC,CAAC,wBAC1B,8OAAC,iJAAW;oBAAmB,GAAG,OAAO;mBAAvB,QAAQ,EAAE;;;;;;;;;;;;;;;AAKtC","debugId":null}},
    {"offset": {"line": 199, "column": 0}, "map": {"version":3,"sources":["file:///Users/sonyzaman/Desktop/giTHb/e-commerce/frontend/e-shop/app/page.tsx"],"sourcesContent":["\"use client\";\n\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport ProductGrid from \"../components/products/productGrid\";\n\ninterface Product {\n  id: number;\n  title: string;\n  description: string;\n  price: number;\n  productType: string;\n  vendor: { id: number; name: string };\n  category: { id: number; name: string };\n  imageUrl?: string;\n}\n\nexport default function Home() {\n  const [products, setProducts] = useState<Product[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n\n  useEffect(() => {\n    const fetchProducts = async () => {\n      try {\n        setLoading(true);\n        const response = await axios.get<Product[]>(\"http://localhost:3000/products\");\n        setProducts(response.data);\n      } catch (err) {\n        console.error(\"Failed to fetch products:\", err);\n        setError(\"Failed to load products\");\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchProducts();\n  }, []);\n\n  if (loading) return <div className=\"text-center mt-20\">Loading...</div>;\n  if (error) return <div className=\"text-center mt-20\">Error: {error}</div>;\n  if (products.length === 0)\n    return <div className=\"text-center mt-20\">No products found</div>;\n\n  return (\n    <div className=\"max-w-7xl mx-auto px-5 py-10\">\n      <h1 className=\"text-3xl font-bold mb-6 text-center\">All Products</h1>\n      <ProductGrid products={products} />\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;;AAEA;AACA;AACA;AAJA;;;;;AAiBe,SAAS;IACtB,MAAM,CAAC,UAAU,YAAY,GAAG,IAAA,iNAAQ,EAAY,EAAE;IACtD,MAAM,CAAC,SAAS,WAAW,GAAG,IAAA,iNAAQ,EAAC;IACvC,MAAM,CAAC,OAAO,SAAS,GAAG,IAAA,iNAAQ,EAAgB;IAElD,IAAA,kNAAS,EAAC;QACR,MAAM,gBAAgB;YACpB,IAAI;gBACF,WAAW;gBACX,MAAM,WAAW,MAAM,gJAAK,CAAC,GAAG,CAAY;gBAC5C,YAAY,SAAS,IAAI;YAC3B,EAAE,OAAO,KAAK;gBACZ,QAAQ,KAAK,CAAC,6BAA6B;gBAC3C,SAAS;YACX,SAAU;gBACR,WAAW;YACb;QACF;QAEA;IACF,GAAG,EAAE;IAEL,IAAI,SAAS,qBAAO,8OAAC;QAAI,WAAU;kBAAoB;;;;;;IACvD,IAAI,OAAO,qBAAO,8OAAC;QAAI,WAAU;;YAAoB;YAAQ;;;;;;;IAC7D,IAAI,SAAS,MAAM,KAAK,GACtB,qBAAO,8OAAC;QAAI,WAAU;kBAAoB;;;;;;IAE5C,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAG,WAAU;0BAAsC;;;;;;0BACpD,8OAAC,iJAAW;gBAAC,UAAU;;;;;;;;;;;;AAG7B","debugId":null}}]
}